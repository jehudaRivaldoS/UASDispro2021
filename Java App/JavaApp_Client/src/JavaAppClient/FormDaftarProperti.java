/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JavaAppClient;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author patrick
 */
public class FormDaftarProperti extends javax.swing.JFrame {

    Socket client;
    DataOutputStream out;
    BufferedReader inp;
    String pesan = "";
//String infoTambah ="";

    /**
     * Creates new form FormDetailProperti
     */
    public FormDaftarProperti() {
        initComponents();
    }

    public FormDaftarProperti(Socket s, DataOutputStream outs, BufferedReader inps) {
        try {
            initComponents();
            client = s;
            out = outs;
            inp = inps;
            System.out.println("41");
            out.writeBytes("daftar rumah\n");
            Refreshtable();
        } catch (IOException ex) {
            Logger.getLogger(FormDaftarProperti.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public FormDaftarProperti(Socket s) {
        initComponents();
        try {
            this.client = s;
            this.out = new DataOutputStream((client.getOutputStream()));
            this.inp = new BufferedReader(new InputStreamReader(client.getInputStream()));
            System.out.println("56");
            if (!inp.ready()) {
                out.writeBytes("daftar rumah\n");
            } else {
                pesan = inp.readLine();
                out.writeBytes("daftar rumah\n");
            }

            Refreshtable();
        } catch (Exception ex) {
            Logger.getLogger(FormReservasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblJudul = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProfil = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblJudul.setFont(new java.awt.Font("SF UI Text", 1, 30)); // NOI18N
        lblJudul.setText("DAFTAR PROPERTI");

        tableProfil.setFont(new java.awt.Font("SF UI Text", 0, 12)); // NOI18N
        tableProfil.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Rumah", "Alamat", "Kota", "Harga", "Tipe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProfil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProfilMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableProfil);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addComponent(lblJudul)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(lblJudul)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableProfilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProfilMouseClicked
        // TODO add your handling code here:
        int i = tableProfil.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tableProfil.getModel();

        String nama = model.getValueAt(i, 0).toString();
        String alamat = model.getValueAt(i, 1).toString();
        String kota = model.getValueAt(i, 2).toString();
        String harga = model.getValueAt(i, 3).toString();
        String tipe = model.getValueAt(i, 4).toString();

        FormDetailProperti k = new FormDetailProperti(client, nama, alamat, kota, harga, tipe, out, inp);
        k.setVisible(true);
    }//GEN-LAST:event_tableProfilMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormDaftarProperti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormDaftarProperti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormDaftarProperti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormDaftarProperti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormDaftarProperti().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblJudul;
    private javax.swing.JTable tableProfil;
    // End of variables declaration//GEN-END:variables

    // <editor-fold defaultstate="collapsed" desc="Refreshtable()">
    public void Refreshtable() {
        try {
            DefaultTableModel model = (DefaultTableModel) tableProfil.getModel();
            model.setRowCount(0);
            Object[] rowData = new Object[5];
            System.out.println("197");
            pesan = inp.readLine();

            String[] info = pesan.split("-");
            String[] msg = null;

            for (int i = 0; i < info.length; i++) {
                System.out.println(info[i]);
                msg = info[i].split(";");
                System.out.println(msg[i]);
                rowData[0] = msg[0];
                rowData[1] = msg[1];
                rowData[2] = msg[2];
                rowData[3] = "Rp" + String.format("%,d\n", Integer.valueOf(msg[3])) + "/malam";
                rowData[4] = msg[4];
                model.addRow(rowData);
            }

        } catch (Exception ex) {
            Logger.getLogger(FormDaftarProperti.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // </editor-fold>
}
